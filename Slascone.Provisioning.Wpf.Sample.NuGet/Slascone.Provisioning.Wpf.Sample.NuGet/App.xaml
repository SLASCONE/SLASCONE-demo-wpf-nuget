<Application x:Class="Slascone.Provisioning.Wpf.Sample.NuGet.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:main="clr-namespace:Slascone.Provisioning.Wpf.Sample.NuGet.Main"
             StartupUri="/Main/MainWindow.xaml">
    <Application.Resources>
        <main:MainViewModel x:Key="MainViewModel" />
        <BitmapImage x:Key="Logo" UriSource="/Resources/DB-SL-Logo-forcircles256px.png" />
        <BitmapImage x:Key="Check" UriSource="/Resources/check.png" />
        <BitmapImage x:Key="Attention" UriSource="/Resources/attention.png" />
        <BitmapImage x:Key="Exclamation" UriSource="/Resources/exclamation.png" />
        <BitmapImage x:Key="Circle" UriSource="/Resources/circle.png" />
        <BitmapImage x:Key="NoUser" UriSource="/Resources/nouser.png" />
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
            <Setter Property="Padding" Value="4"/>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Background" Value="#FF2484DE"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>

            <!-- Round corners -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding  HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <!-- Conditional style for disabled buttons -->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFD3D3D3"/>
                    <Setter Property="Foreground" Value="#FFAFAFAF"/>
                </Trigger>
                <!-- Conditional style for mouse over -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF1E6EEC"/>
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style TargetType="{x:Type Label}" x:Key="LabelDefaultStyle">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
        </Style>
        <Style x:Key="InlineButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0,-2,0,0"/>
            <Setter Property="Margin" Value="5,0,5,0"/> <!-- Adjusted Margin to move button along Y axis -->
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
            <!-- <Setter Property ="LayoutTransform" Value=""></Setter> -->
            <Setter Property ="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property ="VerticalContentAlignment" Value="Bottom"></Setter>
        </Style>
        <Style x:Key="InlineLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Ebrima"/>
            <Setter Property="Padding" Value="0 0 0 0" />
        </Style>
    </Application.Resources>

</Application>
